#!/bin/sh

export ENV="${ENV:-$(git symbolic-ref -q HEAD | sed s@refs/heads/@@)}"

while getopts 123456789ATak:lstv opt; do
    case $opt in
        [1-9]) n="$opt";;
        A) n="${n:-all}"; query='*:*';;
        T) n=tmux; query='*:*';;
        a) n=all;;
        k) knifeopts="$OPTARG";;
        l) n=list;;
        s) n=sequential;;
        t) n=tmux;;
        v) verbose=1;;
    esac
done
shift $(($OPTIND - 1))

if [ -z "$query" ]; then
    case "$1" in
        domU-*|ip-*) query="hostname:$1";;
        i-*) query="name:$1";;
        lb) query='role:load_balancer';;
        mon|monitor|nagios) query='role:monitoring_server';;
        ws|web|website) query='role:webserver';;
        es|elastic|elasticsearch) query='role:elasticsearch_ebs';;
        rabbit|amqp) query='role:rabbitmq';;
        gs|gluster) query='role:gluster_server';;
        worker) query='role:safe_worker';;
        bg) query='role:safe_background_worker';;
        nsf) query='role:safe_nsf';;
        nfs) query='role:nfs_server';;
        *:*) query="$1";;
        "") echo 'usage: [ENV=org] sa-ssh [-a] QUERY ARGS...' 1>&2; exit 2;;
        *) query="role:$1";;
    esac
    shift
fi

title() {
    printf "\033]0;$*\007"
}

knifeq() {
    knife search node "$1" -a ec2.public_hostname -i
}

knifessh() {
    knife ssh $knifeopts "$1" -a ec2.public_hostname "$2"
}

vssh() {
    test "$verbose" && echo "#### sa-ssh: $1"
    ssh "$@"
}

title "sa-ssh: $query on $ENV"
tmpfile="$(mktemp -t sa-ssh.XXXXXX)"
trap "rm -f '$tmpfile'" EXIT

if knifeq "$query" >"$tmpfile" 2>/dev/null; then
    case "$(grep -c . "$tmpfile")" in
        0) echo 'Error: no nodes found'; exit 1;;
        1) n="${n:-1}";;
    esac
    if [ -z "$n" ]; then
        nl "$tmpfile"
        printf 'Node number, [a]ll, [s]equential, or [t]mux >> '; read n
    fi
    case "$n" in
        [0-9]*)
            vssh "$(sed -n "${n}p" "$tmpfile")" "$@"
            ;;
        a|all|"")
            knifessh "$query" "${*:-interactive}"
            ;;
        list)
            cat "$tmpfile"
            ;;
        s|sequential)
            for h in $(cat "$tmpfile"); do
                vssh "$h" "$@"
            done
            ;;
        t|tmux)
            for h in $(cat "$tmpfile"); do
                tmux split -d "ssh -t $h $*"
                tmux select-layout main-vertical >/dev/null 2>&1
            done
            ;;
        *)
            echo "Error: no node numbered '$n'"
            exit 3
            ;;
    esac
else
    echo 'Error: knife query failed'
    exit 1
fi
